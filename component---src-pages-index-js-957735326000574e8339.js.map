{"version":3,"file":"component---src-pages-index-js-957735326000574e8339.js","mappings":"wOAyCA,I,EAAA,EA/BYA,KAAO,IAADC,EAAAC,EAChB,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAiBS,QAAzBH,EAAGE,EAAKE,KAAKC,oBAAY,IAAAL,GAAtBA,EAAwBM,OACF,QAAzBL,EAAGC,EAAKE,KAAKC,oBAAY,IAAAJ,GAAtBA,EAAwBM,OAEvC,OACEC,EAAAA,cAAA,OAAKC,UAAU,OACbD,EAAAA,cAAA,SAAG,+IAIC,E,iDC3BV,MAAME,EAAiBC,EAAAA,GAAOC,QAAOC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yYAwFrC,MApEkBC,IAAyB,IAADf,EAAA,IAAvB,KAAEE,EAAI,SAAEc,GAAUD,EACnC,MAAME,GAAkC,QAAtBjB,EAAAE,EAAKE,KAAKC,oBAAY,IAAAL,OAAA,EAAtBA,EAAwBkB,QAAK,QACzCC,EAAQjB,EAAKkB,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAENd,EAAAA,cAACe,EAAAA,EAAM,CAACP,SAAUA,EAAUE,MAAOD,GACjCT,EAAAA,cAACT,EAAG,MACJS,EAAAA,cAAA,SAAG,8JAUPA,EAAAA,cAACe,EAAAA,EAAM,CAACP,SAAUA,EAAUE,MAAOD,GACjCT,EAAAA,cAACT,EAAG,MACJS,EAAAA,cAAA,MAAIgB,MAAO,CAAEC,UAAU,SACpBN,EAAMO,KAAIC,IACT,MAAMT,EAAQS,EAAKC,YAAYV,OAASS,EAAKE,OAAOC,KAEpD,OACEtB,EAAAA,cAAA,MAAIuB,IAAKJ,EAAKE,OAAOC,MACnBtB,EAAAA,cAACE,EAAc,CACbD,UAAU,iBACVuB,WAAS,EACTC,SAAS,6BAETzB,EAAAA,cAAC0B,EAAAA,EAAM,KACL1B,EAAAA,cAAC2B,EAAAA,EAAW,CACVC,OAAOC,EAAAA,EAAAA,GAASV,EAAKC,YAAYU,YACjCC,IAAI,iBAGR/B,EAAAA,cAAC0B,EAAAA,EAAM,KACL1B,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACEA,EAAAA,cAACgC,EAAAA,KAAI,CAACC,GAAId,EAAKE,OAAOC,KAAMY,SAAS,OACnClC,EAAAA,cAAA,QAAMkC,SAAS,YAAYxB,KAG/BV,EAAAA,cAAA,aAAQmB,EAAKE,OAAOc,YAAYC,MAChCpC,EAAAA,cAAA,SACEA,EAAAA,cAAA,SACEA,EAAAA,cAAA,SAAImB,EAAKC,YAAYtB,UAGzBE,EAAAA,cAAA,aAAQmB,EAAKC,YAAYiB,MACzBrC,EAAAA,cAAA,KACEsC,wBAAyB,CACvBC,OAAQpB,EAAKC,YAAYoB,aAAerB,EAAKsB,SAE/CP,SAAS,mBAKd,KAIJ,EAWN,MAAMQ,EAAOA,IAAM1C,EAAAA,cAAC2C,EAAAA,EAAG,CAACjC,MAAM,a","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            instagram\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <p>\n        Welcome to UBC iGEMâ€™s Scientific Blog. Tune in every other week to see\n        the latest synthetic biology happenings in the scientific community!\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport styled from \"styled-components\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { Center } from \"../components/constants\"\n\nconst DisplayArticle = styled.article`\n  display: flex;\n  flex-direction: row;\n\n  @media only screen and (max-width: 600px) {\n    flex-direction: column;\n  }\n  .gatsby-image-wrapper {\n    width: 15vw;\n    @media only screen and (max-width: 600px) {\n      width: 70vw;\n      height: 20vh;\n      margin-bottom: 15px;\n    }\n    @media only screen and (min-width: 600px) {\n      margin-right: 15px;\n    }\n  }\n`\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <DisplayArticle\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <Center>\n                  <GatsbyImage\n                    image={getImage(post.frontmatter.frontImage)}\n                    alt=\"article-img\"\n                  />\n                </Center>\n                <Center>\n                  <header>\n                    <h2>\n                      <Link to={post.fields.slug} itemProp=\"url\">\n                        <span itemProp=\"headline\">{title}</span>\n                      </Link>\n                    </h2>\n                    <small>{post.fields.readingTime.text}</small>\n                    <p>\n                      <b>\n                        <i>{post.frontmatter.author}</i>\n                      </b>\n                    </p>\n                    <small>{post.frontmatter.date}</small>\n                    <p\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt,\n                      }}\n                      itemProp=\"description\"\n                    />\n                  </header>\n                </Center>\n              </DisplayArticle>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n          readingTime {\n            text\n          }\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          author\n          frontImage {\n            childImageSharp {\n              gatsbyImageData(placeholder: NONE, formats: [AUTO, WEBP])\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","site","siteMetadata","author","social","React","className","DisplayArticle","styled","article","_templateObject","_taggedTemplateLiteralLoose","_ref","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","Layout","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Center","GatsbyImage","image","getImage","frontImage","alt","Link","to","itemProp","readingTime","text","date","dangerouslySetInnerHTML","__html","description","excerpt","Head","Seo"],"sourceRoot":""}