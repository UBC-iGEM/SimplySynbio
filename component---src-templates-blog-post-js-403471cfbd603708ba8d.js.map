{"version":3,"file":"component---src-templates-blog-post-js-403471cfbd603708ba8d.js","mappings":"yOASA,MAkEaA,EAAOC,IAAyC,IAAtCC,MAAQC,eAAgBC,IAAQH,EACrD,OACEI,EAAAA,cAACC,EAAAA,EAAG,CACFC,MAAOH,EAAKI,YAAYD,MACxBE,YAAaL,EAAKI,YAAYC,aAAeL,EAAKM,SAClD,EAIN,UA3EyBC,IAGlB,IAADC,EAAA,IAFJV,MAAM,SAAEW,EAAQ,KAAEC,EAAI,KAAEC,EAAMZ,eAAgBC,GAAM,SACpDY,GACDL,EACC,MAAMM,GAA6B,QAAjBL,EAAAG,EAAKG,oBAAY,IAAAN,OAAA,EAAjBA,EAAmBL,QAAK,QAE1C,OACEF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACc,EAAAA,EAAM,CAACH,SAAUA,EAAUT,MAAOU,GACjCZ,EAAAA,cAAA,WACEe,UAAU,YACVC,WAAS,EACTC,SAAS,6BAETjB,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIkB,SAAS,YAAYnB,EAAKI,YAAYD,OAC1CF,EAAAA,cAAA,KAAGmB,MAAO,CAAEC,OAAQ,MAClBpB,EAAAA,cAAA,SAAID,EAAKsB,OAAOC,YAAYC,OAE9BvB,EAAAA,cAAA,KAAGmB,MAAO,CAAEC,OAAQ,MAAO,cAAYrB,EAAKI,YAAYqB,QACxDxB,EAAAA,cAAA,KAAGmB,MAAO,CAAEC,OAAQ,MAAQrB,EAAKI,YAAYsB,MAC7CzB,EAAAA,cAAC0B,EAAAA,EAAM,CAACP,MAAO,CAAEQ,UAAW,SAC1B3B,EAAAA,cAAC4B,EAAAA,EAAW,CACVC,OAAOC,EAAAA,EAAAA,GAAS/B,EAAKI,YAAY4B,YACjCC,IAAI,iBAGRhC,EAAAA,cAAA,YAEFA,EAAAA,cAAA,WACEiC,wBAAyB,CAAEC,OAAQnC,EAAKoC,MACxCjB,SAAS,gBAEXlB,EAAAA,cAAA,YAEFA,EAAAA,cAAA,OAAKe,UAAU,iBACbf,EAAAA,cAAA,MACEmB,MAAO,CACLiB,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGXxC,EAAAA,cAAA,UACGQ,GACCR,EAAAA,cAACyC,EAAAA,KAAI,CAACC,GAAIlC,EAASa,OAAOsB,KAAMC,IAAI,QAAO,KACtCpC,EAASL,YAAYD,QAI9BF,EAAAA,cAAA,UACGS,GACCT,EAAAA,cAACyC,EAAAA,KAAI,CAACC,GAAIjC,EAAKY,OAAOsB,KAAMC,IAAI,QAC7BnC,EAAKN,YAAYD,MAAM,UAOnC,C","sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { Center } from \"../components/constants\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport styled from \"styled-components\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <>\n      <Layout location={location} title={siteTitle}>\n        <article\n          className=\"blog-post\"\n          itemScope\n          itemType=\"http://schema.org/Article\"\n        >\n          <header>\n            <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n            <p style={{ margin: \"0\" }}>\n              <i>{post.fields.readingTime.text}</i>\n            </p>\n            <p style={{ margin: \"0\" }}>Written by {post.frontmatter.author}</p>\n            <p style={{ margin: \"0\" }}>{post.frontmatter.date}</p>\n            <Center style={{ marginTop: \"25px\" }}>\n              <GatsbyImage\n                image={getImage(post.frontmatter.frontImage)}\n                alt=\"article-img\"\n              />\n            </Center>\n            <br />\n          </header>\n          <section\n            dangerouslySetInnerHTML={{ __html: post.html }}\n            itemProp=\"articleBody\"\n          />\n          <hr />\n        </article>\n        <nav className=\"blog-post-nav\">\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </Layout>\n    </>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        author\n        frontImage {\n          childImageSharp {\n            gatsbyImageData(placeholder: NONE, formats: [AUTO, WEBP])\n          }\n        }\n        description\n      }\n      fields {\n        slug\n        readingTime {\n          text\n        }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Head","_ref2","data","markdownRemark","post","React","Seo","title","frontmatter","description","excerpt","_ref","_site$siteMetadata","previous","next","site","location","siteTitle","siteMetadata","Layout","className","itemScope","itemType","itemProp","style","margin","fields","readingTime","text","author","date","Center","marginTop","GatsbyImage","image","getImage","frontImage","alt","dangerouslySetInnerHTML","__html","html","display","flexWrap","justifyContent","listStyle","padding","Link","to","slug","rel"],"sourceRoot":""}